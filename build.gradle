repositories {
    mavenCentral()
    maven {
        name 'jgit-repository'
        url 'http://download.eclipse.org/jgit/maven'
    }
}

apply plugin: 'groovy'
apply plugin: 'application'

sourceCompatibility = '1.6'
mainClassName = 'gradletemplate.Main'

dependencies {
    groovy "org.codehaus.groovy:groovy:${groovy_version}", {
        exclude group: 'asm', module: 'asm-commons'
        exclude group: 'asm', module: 'asm-tree'
        exclude group: 'asm', module: 'asm-util'
        exclude group: 'asm', module: 'asm-analysis'
    }

    compile "org.slf4j:slf4j-api:${slf4j_version}"
    compile "com.google.code.findbugs:jsr305:${jsr305_version}"
    compile "commons-cli:commons-cli:${commons_cli_version}"
    compile "com.google.guava:guava:${guava_version}"

    compile "org.eclipse.jgit:org.eclipse.jgit:${jgit_version}"

    runtime "ch.qos.logback:logback-classic:${logback_classic_version}"

    testCompile "org.spockframework:spock-core:${spock_version}", {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
}


applicationDistribution.from('.') {
    into 'gradle-wrapper'
    include 'gradlew*'
}


applicationDistribution.from('.gradle-wrapper') {
    into 'gradle-wrapper/.gradle-wrapper'
    include '*'
}

// **************************************************************************
//
// INTELLIJ IDEA CONFIGURATION
//
// **************************************************************************

apply plugin: 'idea'


idea {
    module {
        excludeDirs += file('.gradle-wrapper')
    }

    project {
        wildcards += ['?*.gradle']
        jdkName = '1.6'
        ipr.withXml {xp ->
            def root = xp.asNode()
            root.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'

            def codeStyleSettingsManager = root.find {it.component.@name == 'CodeStyleSettingsManager' }
            if (!codeStyleSettingsManager) {
                def builder = NodeBuilder.newInstance()
                //noinspection GroovyAccessibility
                builder.current = root

                builder.component(name: 'CodeStyleSettingsManager') {
                    option(name: 'USE_PER_PROJECT_SETTINGS', value: 'true')
                    option(name: 'PER_PROJECT_SETTINGS') {
                        value() {
                            ['groovy', 'java', 'scala', 'sql', 'xml', 'js', 'jsp', 'php', 'yml'].each {lang ->
                                ADDITIONAL_INDENT_OPTIONS(fileType: lang) {
                                    option(name: 'INDENT_SIZE', value: '4')
                                    option(name: 'CONTINUATION_INDENT_SIZE', value: '8')
                                    option(name: 'TAB_SIZE', value: '4')
                                    option(name: 'USE_TAB_CHARACTER', value: 'false')
                                    option(name: 'SMART_TABS', value: 'false')
                                    option(name: 'LABEL_INDENT_SIZE', value: '0')
                                    option(name: 'LABEL_INDENT_ABSOLUTE', value: 'false')
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// **************************************************************************
//
// GRADLE WRAPPER
//
// **************************************************************************

task wrapper(type: Wrapper, group: 'Other', description: 'Creates the Gradle wrapper') {
    gradleVersion = '1.0'
    jarFile = '.gradle-wrapper/gradle-wrapper.jar'
}
